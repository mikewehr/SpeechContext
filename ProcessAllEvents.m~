function [MasterEvents] = ProcessAllEvents(varargin)
% Run ProcessEvents across all directories for a given mouse and combine
% them based on the master directory. Input can be a master directory string or a
% list of master directories 
    
    
    datadir = varargin;

    for iMouse = 1:length(datadir)
        cd(datadir{iMouse});
        load('dirs.mat');
        temp_str = strsplit(pwd, '-');
        mouseID = temp_str{end};
        load(fullfile(datadir{iMouse},'rez.mat'))
        L = (rez.ops.recLength)/sp.sample_rate;
        save(fullfile(datadir{iMouse},'RecLengths.mat'),'L')
        sampleRate = sp.sample_rate;
        for i = 1:length(dirs)
            [Events] = ProcessEvents(dirs{i});
            
            if i == 1
                if strcmp(Events(1).type, 'soundfile') == 1
                    speech_fieldnames = fieldnames(Events);
                    MasterEvents.Speech = Events;
                    MasterEvents.Tuning = struct([]);
                elseif strcmp(Events(1).type, 'tone') == 1
                    tuning_fieldnames = fieldnames(Events);
                    MasterEvents.Tuning = Events;
                    MasterEvents.Speech = struct([]);
                else
                    error("This doesn't appear to be recording either tuning curves or speech context protocols, this function may need to be edited to include more stimulus types")
                end
            end
            
            if ~isempty(Events)
                for m = 1:length(Events)
                    Events(m).message_timestamp_sec = Events(m).message_timestamp_sec + L(i - 1);
                    Events(m).soundcard_trigger_timestamp_sec = Events(m).soundcard_trigger_timestamp_sec + L(i - 1);
                end
                start_acq_samp = L(i - 1)*(30e3);                               %Shouldn't be hardcoded
                for m = 1:length(Events)
                    Events(m).message_timestamp_samples = Events(m).message_timestamp_samples + start_acq_samp;
                end
                
                clear temp_stim_types
                for i = 1:length(Events)
                    temp_stim_types{i} = Events(i).type;
                end
                types_of_stims = unique(temp_stim_types);
                if length(types_of_stims) == 4
                    for q = 1:length(Events)
                        if strcmp(Events(q).type, 'tone') == 1
                            if isempty(MasterEvents.Tuning)
                                MasterEvents.Tuning = [MasterEvents.Tuning, Events(q)];
                            else
                                end_index = length(MasterEvents.Tuning) + 1;
                                for fields = fieldnames(MasterEvents.Tuning)
                                    for z = 1:length(fields)
                                        fname = fields{z};
                                        MasterEvents.Tuning(end_index).(fname) = Events(q).(fname);
                                    end
                                end
                            end
                        elseif strcmp(Events(q).type, 'soundfile') == 1
                            if isempty(MasterEvents.Speech)
                                MasterEvents.Speech = [MasterEvents.Speech, Events(q)];
                            else
                                end_index = length(MasterEvents.Speech) + 1;
                                for fields = fieldnames(MasterEvents.Speech)
                                    for z = 1:length(fields)
                                        fname = fields{z};
                                        MasterEvents.Speech(end_index).(fname) = Events(q).(fname);
                                    end
                                end
                            end
                        elseif strcmp(Events(q).type, 'silentsound') == 1 && Events(q).duration == 363.7340
                            end_index = length(MasterEvents.Speech) + 1;
                            for fields = fieldnames(MasterEvents.Speech)
                                for z = 1:length(fields)
                                    fname = fields{z};
                                    MasterEvents.Speech(end_index).(fname) = Events(q).(fname);
                                end
                            end
                        elseif strcmp(Events(q).type, 'silentsound') == 1 && Events(q).duration == 25
                            end_index = length(MasterEvents.Tuning) + 1;
                            for fields = fieldnames(MasterEvents.Tuning)
                                for z = 1:length(fields)
                                    fname = fields{z};
                                    MasterEvents.Tuning(end_index).(fname) = Events(q).(fname);
                                end
                            end
                        elseif strcmp(Events(q).type, 'whitenoise') == 1 && Events(q).duration == 363.7340
                            end_index = length(MasterEvents.Speech) + 1;
                            for fields = fieldnames(MasterEvents.Speech)
                                for z = 1:length(fields)
                                    fname = fields{z};
                                    MasterEvents.Speech(end_index).(fname) = Events(q).(fname);
                                end
                            end
                        elseif strcmp(Events(q).type, 'whitenoise') == 1 && Events(q).duration == 25
                            end_index = length(MasterEvents.Tuning) + 1;
                            for fields = fieldnames(MasterEvents.Tuning)
                                for z = 1:length(fields)
                                    fname = fields{z};
                                    MasterEvents.Tuning(end_index).(fname) = Events(q).(fname);
                                end
                            end
                        else
                            error("Couldn't resolve stimuli, manually check stimlog")
                            pause
                        end
                    end
                elseif length(types_of_stims) == 3
                    if strcmp(Events(1).type, 'soundfile') == 1
                        MasterEvents.Speech = [MasterEvents.Speech, Events];
                    elseif strcmp(Events(1).type, 'tone') == 1
                        if isfield(MasterEvents.Tuning, 'sourcefile')
                            MasterEvents.Tuning = rmfield(MasterEvents.Tuning, 'sourcefile');
                        end
                        if isfield(MasterEvents.Tuning, 'sourcepath')
                            MasterEvents.Tuning = rmfield(MasterEvents.Tuning, 'sourcepath');
                        end
                        MasterEvents.Tuning = [MasterEvents.Tuning, Events];
                    end
                else
                    error("Unexpected number of types of stimuli, what experiment did you run?")
                end
            end

            
            
            
        end
    end
end